import technology from "../../Technology/technology/container_base.technology" as container_base
import technology from "../../Technology/technology/eureka.technology" as Eureka
import nodes from "../../Booking-Management-Microservice-Command/bookingCommandManagement.operation" as BookingManagementCommandSide
import nodes from "../../Booking-Management-Microservice-Query/bookingQueryManagement.operation" as BookingManagementQuerySide
import nodes from "../../Charging-Station-Management-Microservice-Command/chargingStationCommandManagement.operation" as CSMMCommandSide
import nodes from "../../Charging-Station-Management-Microservice-Query/chargingStationQueryManagement.operation" as CSMMQuerySide
import nodes from "../../Charging-Station-Search-Microservice/chargingStationSearch.operation" as ChargingStationSearchService
import nodes from "../../Charging-Station-Sharing-Microservice-Command/chargingStationSharingCommand.operation" as CSSMCommandSide
import nodes from "../../Charging-Station-Sharing-Microservice-Query/chargingStationSharingQuery.operation" as CSSMQuerySide
import nodes from "../../Environmental-Data-Analysis-Microservice-Command/environmentalDataCommandAnalysis.operation" as EDAMCommandSide
import nodes from "../../Environmental-Data-Analysis-Microservice-Query/environmentalDataQueryAnalysis.operation" as EDAMQuerySide

@technology(container_base)
@technology(Eureka)
Eureka is Eureka::_infrastructure.Eureka
    with operation environment "openjdk:11-jdk-slim"
    used by nodes
    	BookingManagementCommandSide::BookingManagementCommandContainer,
		BookingManagementQuerySide::BookingManagementQueryContainer,
		CSMMCommandSide::ChargingStationManagementCommandContainer,
		CSMMQuerySide::ChargingStationManagementQueryContainer,
		ChargingStationSearchService::ChargingStationSearchContainer,
		CSSMCommandSide::ChargingStationSharingCommandContainer,
		CSSMQuerySide::ChargingStationSharingQueryContainer,
		EDAMCommandSide::EnvironmentalDataAnalysisCommandContainer,
		EDAMQuerySide::EnvironmentalDataAnalysisQueryContainer
	{

		    default values {
		        hostname="eureka"
		        port=8761
		        imageType="SpringComponent"
		        mavenArtifactId="Eureka"
		        mavenGroupId="de.fhdo.puls.service.eureka"
		        mavenVersion="0.0.1-SNAPSHOT"
		        mavenName="eureka"
		        programmingLanguage="Java"
		    }
		endpoints {
			Eureka::_protocols.http : "eureka:8761";
		}
	}