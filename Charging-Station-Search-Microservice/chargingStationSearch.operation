import microservices from "chargingStationSearch.services" as ChargingStationSearchService
import technology from "../Technology/technology/container_base.technology" as container_base
import technology from "../Technology/technology/protocol.technology" as ^protocol
import nodes from "../Service-Oriented-Infrastructure-Components/infrastructure/eureka.operation" as ServiceDiscovery
import nodes from "../Service-Oriented-Infrastructure-Components/infrastructure/mongodb.operation" as Database

@technology(container_base)
@technology(^protocol)
container ChargingStationSearchContainer
	deployment technology container_base::_deployment.Kubernetes with operation environment "openjdk:17-alpine"
	deploys ChargingStationSearchService::de.fhdo.puls.chargingstationsearchmanagement.ChargingStationSearchManagement
	depends on nodes
		ServiceDiscovery::Eureka,
		Database::MongoDB
	{
		default values {
			//General Spring Boot configurations
			springApplicationName="ChargingStationManagementMicroservice"
			serverPort=8051

			// MongoDB database configuration
			springDataMongodbUsername="root"
			stringDataMongodbPassword="password"
			springDataMongodbHost="mongodb"
			springDataMongodbPort=27017
			springDataMongodbDatabase="parkingspace_search_service"

			//Eureka configuration
			eurekaUri="http://eureka:8761/eureka"

			//Keycloak configuration
			keycloakAuthServerUrl="https://auth.seelab.fh-dortmund.de/auth"
			keycloakRealm="puls"
			keycloakResource="puls"
			keycloakBearerOnly=true

			basic endpoints {^protocol::_protocols.rest: "http://localhost:8071/ChargingStationManagementService";}
		}

	}